<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title><?php echo $this->pageTitle; ?></title>
    <link rel="stylesheet" type="text/css" href="/vendor/bootstrap-css/css/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="/vendor/bootstrap-css/css/bootstrap-theme.min.css" />
    <link rel="stylesheet" type="text/css" href="/vendor/animate-css/animate.min.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script type="text/javascript" src="/js/assets/bundle.min.js"></script>
    <script type="text/javascript">

        document.addEventListener('DOMContentLoaded', function()
        {
            var cardTemplate = {
                'mainElement' :
                {
                    "type" : 'div',
                    "className" : 'card animated tada'
                },
                'elementList' : [
                    { type: 'h4', innerHTML: 'asdasd'},
                    {
                        type: 'div',
                        innerHTML: 'asdasd',
                        children : {
                            type: 'ul',
                            children : {
                                type: 'li',
                                innerHTML : 'asdfasdfsfd'
                            }
                        }
                    }
                ]
            };


            document.getElementById('new-card').addEventListener('click', function(e){
                var card = CardBuilder.newCard(JSON.parse(JSON.stringify(cardTemplate)));
                document.getElementById('new-col').appendChild(card.getCardElement());
                DragAndDrop.addDraggable(card.getCardElement(), dragConfiguration);
            });


            var dropConfiguration = {
                drop : {
                    callback : function(e)
                    {
                        if (e.preventDefault) {
                            e.preventDefault();
                        }

                        if (e.stopPropagation) {
                            e.stopPropagation();
                        }

                        if (elementDragged != this) {
                            elementDragged.parentNode.removeChild(elementDragged);
                            this.appendChild(elementDragged);
                        }

                        this.classList.remove('active');
                        this.classList.remove('over');
                        return false;
                    }
                },
                dragover : {
                    callback : function(e)
                    {
                        if (e.preventDefault) {
                            e.preventDefault();
                        }

                        e.dataTransfer.dropEffect = 'move';
                        this.classList.add('drop');
                        return false;
                    }
                },
                dragenter : {
                    callback : function(e)
                    {
                        this.classList.add('over');
                        this.classList.add('active');
                    }
                },
                dragleave : {
                    callback : function(e)
                    {
                        this.classList.remove('over');
                        this.classList.remove('active');
                    }
                }
            };


            var dragConfiguration = {
                'dragstart'   : {
                    callback: function (e)
                    {
                        e.dataTransfer.effectAllowed = 'move';
                        elementDragged = this;
                        this.classList.add('dragged');
                        e.dataTransfer.setData('text/html', this.innerHTML);
                    }
                },
                'dragend'     : {
                    callback: function (e)
                    {
                        this.classList.remove('dragged');
                        elementDragged = null;
                    }
                },
                'drag'        : {
                    callback: function(e)
                    {

                    }
                }
            };

            DragAndDrop.addDropZone('.dropzone', dropConfiguration);

        });



    </script>
    <style>
        [draggable] {
            -moz-user-select: none;
            -khtml-user-select: none;
            -webkit-user-select: none;
            user-select: none;
            /* Required to make elements draggable in old WebKit */
            -khtml-user-drag: element;
            -webkit-user-drag: element;
        }

        .active {
            opacity: 0.8 !important;
        }

        .card {
            padding: 5px;
            z-index: 9999;
            display: inline-block;
            max-width: 250px;
            border: 1px solid #d3d3d3;
            background-color: #fff;
            border-radius: 5px;
            margin: 8px;
            min-height: 100px;
            min-width: 100px;
            cursor: move;
        }

        .card.dragged {
            opacity: 0.6;
        }

        .row.droprow {
            display: flex;
            min-height: 200px;
            width: 100%;
        }

        .over {
            border: 2px dashed #888;
            border-radius: 10px;
        }

        .col-sm-4 {
            padding: 5px;
        }

        .col-sm-4.new {
            background-color: #c1fac3;
        }

        .col-sm-4.in-progress {
            background-color: #e5fab5;
        }

        .col-sm-4.done {
            background-color: #e5fab5;
        }

    </style>
</head>
<body>
    <?php
        $fragment = new \chilimatic\lib\view\PHtml();
        echo $fragment->render(__DIR__ . '/fragment/navbar.phtml');
    ?>

    <div class="alert alert-info">
        <button id="new-card" type="button" class="btn btn-default" aria-label="left Align">
            <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add New Card
        </button>
    </div>

    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-4">
                <h2>New</h2>
            </div>
            <div class="col-sm-4">
                <h2>In Progress</h2>
            </div>
            <div class="col-sm-4">
                <h2>Done</h2>
            </div>
        </div>
        <div class="row droprow">
            <div id="new-col" class="col-sm-4 dropzone new"></div>
            <div class="col-sm-4 dropzone in-progress"></div>
            <div class="col-sm-4 dropzone done"></div>
        </div>
    </div>

</body>
</html>